<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>AMApplicationBuild</key>
	<string>346</string>
	<key>AMApplicationVersion</key>
	<string>2.3</string>
	<key>AMDocumentVersion</key>
	<string>2</string>
	<key>actions</key>
	<array>
		<dict>
			<key>action</key>
			<dict>
				<key>AMAccepts</key>
				<dict>
					<key>Container</key>
					<string>List</string>
					<key>Optional</key>
					<true/>
					<key>Types</key>
					<array>
						<string>com.apple.applescript.object</string>
					</array>
				</dict>
				<key>AMActionVersion</key>
				<string>1.0.2</string>
				<key>AMApplication</key>
				<array>
					<string>Automator</string>
				</array>
				<key>AMParameterProperties</key>
				<dict>
					<key>source</key>
					<dict/>
				</dict>
				<key>AMProvides</key>
				<dict>
					<key>Container</key>
					<string>List</string>
					<key>Types</key>
					<array>
						<string>com.apple.applescript.object</string>
					</array>
				</dict>
				<key>ActionBundlePath</key>
				<string>/System/Library/Automator/Run AppleScript.action</string>
				<key>ActionName</key>
				<string>Run AppleScript</string>
				<key>ActionParameters</key>
				<dict>
					<key>source</key>
					<string>-- Config-- These values may need to be changed depending on your locale.set keyCode_upArrow to 126 set menu_selectAll to {"Xcode", "Edit", "Select All"}set menu_reindent to {"Xcode", "Editor", "Structure", "Re-Indent"}-- End Config

-- Modifier keys used to launch the service may interfere with the
-- keystroke events used for document detection. Pause a moment to
-- allow the user to end the keystroke.
delay 0.2on menu_click(mList)	local appName, topMenu, r		-- Validate our input	if mList's length &lt; 3 then error "Menu list is not long enough"		-- Set these variables for clarity and brevity later on	set {appName, topMenu} to (items 1 through 2 of mList)	set r to (items 3 through (mList's length) of mList)		-- This overly-long line calls the menu_recurse function with	-- two arguments: r, and a reference to the top-level menu	tell application "System Events" to my menu_click_recurse(r, ((process appName)'s Â¬		(menu bar 1)'s (menu bar item topMenu)'s (menu topMenu)))end menu_clickon menu_click_recurse(mList, parentObject)	local f, r		-- `f` = first item, `r` = rest of items	set f to item 1 of mList	if mList's length &gt; 1 then set r to (items 2 through (mList's length) of mList)		-- either actually click the menu item, or recurse again	tell application "System Events"		if mList's length is 1 then			click parentObject's menu item f		else			my menu_click_recurse(r, (parentObject's (menu item f)'s (menu f)))		end if	end tellend menu_click_recurseusing terms from application "Xcode"	-- Reliably finds the currently active document in Xcode regardless of	-- windows, tabs, and multiple open projects.	on find_active_document(xcode_application)		global menu_selectAll, keyCode_upArrow				set selection_ranges to {}		set active_document to missing value				-- Select all of the text in the active document.		-- Avoid Cmd+A since the keyboard shortcut can be changed.		menu_click(menu_selectAll)				-- Catalog the selection of each open document.		-- With multiple Xcode windows open, the order of these documents		-- is not dependent on the order of the windows. The first document		-- will often be from a background window.		tell application xcode_application			repeat with this_document in text documents				set end of selection_ranges to (get selection of this_document)			end repeat		end tell				-- The active document text was previously selected with Select All.		-- Now, we use the arrow key to deselect the active document.		tell application "System Events" to keystroke (key code keyCode_upArrow)				-- Find the document whose selection changed. Since that change		-- could have only affected one document, regardless of the Xcode		-- interface configuration we know that it is the active document.		tell application xcode_application			set current_index to 0			repeat with this_document in text documents				set current_index to current_index + 1				set previous_selection to (item current_index of selection_ranges)				set current_selection to (get selection of this_document)								-- Find the selection that changed then stop searching				if previous_selection is not current_selection then					set active_document to this_document					exit repeat				end if			end repeat		end tell				return active_document	end find_active_document		-- In case of multiple Xcode installs, be sure to use the active one	set current_application_path to path to frontmost application as text		-- Xcode 4 does not yet let you get the active document, so we have	-- to work for it.	set active_document to find_active_document(current_application_path)		if active_document is missing value then		-- The caret was elsewhere, such as in the console		display dialog "Please select a source file and try again"			else		-- Otherwise, uncrustify and update the document		tell application current_application_path			set raw_source to quoted form of (text of active_document as Unicode text)			set formatted_source to do shell script "/usr/local/bin/uncrustify -l OC -q -c ~/.uncrustify.cfg &lt;&lt;&lt; " &amp; raw_source			set text of active_document to formatted_source		end tell				-- Select the text		menu_click(menu_selectAll)				-- Apply Xcode's indentation		menu_click(menu_reindent)				-- Deselect the text		tell application "System Events" to keystroke (key code keyCode_upArrow)	end ifend using terms from</string>
				</dict>
				<key>BundleIdentifier</key>
				<string>com.apple.Automator.RunScript</string>
				<key>CFBundleVersion</key>
				<string>1.0.2</string>
				<key>CanShowSelectedItemsWhenRun</key>
				<false/>
				<key>CanShowWhenRun</key>
				<true/>
				<key>Category</key>
				<array>
					<string>AMCategoryUtilities</string>
				</array>
				<key>Class Name</key>
				<string>RunScriptAction</string>
				<key>InputUUID</key>
				<string>154CE90C-823A-49C8-9A74-D8CE1B641BAE</string>
				<key>Keywords</key>
				<array>
					<string>Run</string>
				</array>
				<key>OutputUUID</key>
				<string>9EC7A124-B03D-471A-9438-BE11A4D7F90B</string>
				<key>ShowWhenRun</key>
				<false/>
				<key>UUID</key>
				<string>AA974E29-08D2-4934-9220-5E375B0D3CDC</string>
				<key>UnlocalizedApplications</key>
				<array>
					<string>Automator</string>
				</array>
				<key>arguments</key>
				<dict>
					<key>0</key>
					<dict>
						<key>default value</key>
						<string>on run {input, parameters}
	
	(* Your script goes here *)
	
	return input
end run</string>
						<key>name</key>
						<string>source</string>
						<key>required</key>
						<string>0</string>
						<key>type</key>
						<string>0</string>
						<key>uuid</key>
						<string>0</string>
					</dict>
				</dict>
				<key>isViewVisible</key>
				<true/>
				<key>location</key>
				<string>309.500000:554.000000</string>
				<key>nibPath</key>
				<string>/System/Library/Automator/Run AppleScript.action/Contents/Resources/English.lproj/main.nib</string>
			</dict>
			<key>isViewVisible</key>
			<true/>
		</dict>
	</array>
	<key>connectors</key>
	<dict/>
	<key>state</key>
	<dict>
		<key>AMLogTabViewSelectedIndex</key>
		<integer>1</integer>
		<key>libraryState</key>
		<dict>
			<key>actionsMajorSplitViewState</key>
			<dict>
				<key>expandedPosition</key>
				<real>269</real>
				<key>subviewState</key>
				<array>
					<string>0.000000, 0.000000, 424.000000, 713.000000, NO</string>
					<string>0.000000, 714.000000, 424.000000, 38.000000, NO</string>
				</array>
			</dict>
			<key>actionsMinorSplitViewState</key>
			<dict>
				<key>expandedPosition</key>
				<real>0.0</real>
				<key>subviewState</key>
				<array>
					<string>0.000000, 0.000000, 163.000000, 713.000000, NO</string>
					<string>164.000000, 0.000000, 260.000000, 713.000000, NO</string>
				</array>
			</dict>
			<key>variablesMajorSplitViewState</key>
			<dict>
				<key>expandedPosition</key>
				<real>0.0</real>
				<key>subviewState</key>
				<array>
					<string>0.000000, 0.000000, 424.000000, 555.000000, NO</string>
					<string>0.000000, 556.000000, 424.000000, 196.000000, NO</string>
				</array>
			</dict>
			<key>variablesMinorSplitViewState</key>
			<dict>
				<key>expandedPosition</key>
				<real>0.0</real>
				<key>subviewState</key>
				<array>
					<string>0.000000, 0.000000, 163.000000, 555.000000, NO</string>
					<string>164.000000, 0.000000, 260.000000, 555.000000, NO</string>
				</array>
			</dict>
		</dict>
		<key>majorSplitViewState</key>
		<dict>
			<key>expandedPosition</key>
			<real>476</real>
			<key>subviewState</key>
			<array>
				<string>0.000000, 0.000000, 424.000000, 797.000000, NO</string>
				<string>425.000000, 0.000000, 1016.000000, 797.000000, NO</string>
			</array>
		</dict>
		<key>minorSplitViewState</key>
		<dict>
			<key>expandedPosition</key>
			<real>150</real>
			<key>subviewState</key>
			<array>
				<string>0.000000, 0.000000, 1016.000000, 628.000000, NO</string>
				<string>0.000000, 638.000000, 1016.000000, 140.000000, NO</string>
			</array>
		</dict>
		<key>windowFrame</key>
		<string>{{0, 4}, {1440, 874}}</string>
		<key>workflowViewScrollPosition</key>
		<string>{{0, 0}, {1016, 628}}</string>
	</dict>
	<key>workflowMetaData</key>
	<dict>
		<key>serviceApplicationBundleID</key>
		<string></string>
		<key>serviceApplicationPath</key>
		<string>/Developer/Applications/Xcode.app</string>
		<key>serviceInputTypeIdentifier</key>
		<string>com.apple.Automator.nothing</string>
		<key>serviceOutputTypeIdentifier</key>
		<string>com.apple.Automator.nothing</string>
		<key>serviceProcessesInput</key>
		<integer>0</integer>
		<key>workflowTypeIdentifier</key>
		<string>com.apple.Automator.servicesMenu</string>
	</dict>
</dict>
</plist>
